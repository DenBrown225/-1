import asyncio
from asyncio import WindowsSelectorEventLoopPolicy
import speech_recognition as sr

import tkinter as tk
from tkinter import *
from tkinter import ttk
import threading
from g4f.client import Client
import json
import base64
import requests
import random
from PIL import Image

import customtkinter  # <- import the CustomTkinter module
import customtkinter as ctk

import time
import webbrowser

from gtts import gTTS

import random

import tkinter as tk
from tkinter import filedialog
import pygame

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame
pygame.mixer.init()
c = 0
def toggle_rectangle():
    global b
    global b1
    global moving_down
    global c
    global b2
    c +=1
    
    
    if c % 2 != 0:
        a = 110
        b = -49
# –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥–µ—Ä
        a1 = 325
        
        b1 = -49
        
        
        move_rectangle_down3()
        move_rectangle_down()
        move_rectangle_down2()
        move_rectangle_downs()
        
        b2 += 5
        b += 5
        
    else:# –î–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–≤–µ—Ä—Ö
        
        move_rectangle_up2()
        move_rectangle_up() 
        move_rectangle_up3()
        move_rectangle_ups()
        b2 -= 5
        b -= 5
        b1 -= 5
def move_rectangle_down():
    button54.configure(state='disabled')
    global rectangle_y
    if rectangle_y < 0:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞
        canvas.move(rectangle, 0, 5)  # –î–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑
        rectangle_y += 5
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
        root.after(20, move_rectangle_down)  # –ö–∞–∂–¥—ã–π 20 –º—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
    else:
        moving_down = False  # –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        button54.configure(state='normal')

def move_rectangle_up():
    button54.configure(state='disabled')
    global rectangle_y
    if rectangle_y > -151:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞
        canvas.move(rectangle, 0, -5)  # –î–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–≤–µ—Ä—Ö
        rectangle_y -= 5
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
        root.after(20, move_rectangle_up)  # –ö–∞–∂–¥—ã–π 20 –º—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
    else:
        moving_down = True  # –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        button54.configure(state='normal')
        
c5 =0        
def move_rectangle_down2():
    global button2
    global slider
    global button3
    global rectangle_y2
    global c5
    if rectangle_y2 < 100:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞
        canvas.move(rectangle2, 0, 5)  # –î–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑
        rectangle_y2 += 5
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
        root.after(20, move_rectangle_down2)  # –ö–∞–∂–¥—ã–π 20 –º—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
    else:
        moving_down = False
        
            
        # –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        
        
c2  = 0
def sound():
    global c2
    global button2
    button_text = button2.cget("text")
    
    if button_text == "üîä" :
        button2.destroy()
        button2 = ctk.CTkButton(root, text="üîà", command=sound, width=25, height=25, fg_color="dark grey", hover_color="grey54")
        button2.place(x=325, y=106)
        slider.set(0)
        value2 = 0
        w(value2)
    if button_text == "üîà" :
        button2.destroy()
        button2 = ctk.CTkButton(root, text="üîä", command=sound, width=20, height=25, fg_color="dark grey", hover_color="grey54")
        button2.place(x=325, y=106)# –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        slider.set(50)
        value2 = 50
        w(value2)
value2 = 0
pygame.mixer.music.set_volume(value2)
def w(value1):
    global button2
    global value2
    value2 = int(value1)
    pygame.mixer.music.set_volume(value1)
    if value2 > 0:
        button2.destroy()
        button2 = ctk.CTkButton(root, text="üîä", command=sound, width=20, height=25, fg_color="dark grey", hover_color="grey54")
        button2.place(x=325, y=106)
    else:
        button2.destroy()
        button2 = ctk.CTkButton(root, text="üîà", command=sound, width=25, height=25, fg_color="dark grey", hover_color="grey54")
        button2.place(x=325, y=106)
        
    print(value2)
    
        
    
def move_rectangle_up2():
    
    global rectangle_y2
    if rectangle_y2 > -51:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞
        canvas.move(rectangle2, 0, -5)  # –î–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–≤–µ—Ä—Ö
        rectangle_y2 -= 5
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
        root.after(20, move_rectangle_up2)  # –ö–∞–∂–¥—ã–π 20 –º—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
    else:
        moving_down = True  # –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        
def move_rectangle_down3():
    
    global b2
    global a2
    global rectangle_y3
    if rectangle_y3 < 10:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞
        canvas.move(rectangle3, 0, 5)  # –î–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑
        rectangle_y3 += 5
        b2 += 5
        button3.place(x=a2, y=b2)
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
        root.after(20, move_rectangle_down3)  # –ö–∞–∂–¥—ã–π 20 –º—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
    else:
        moving_down = False 
        

def move_rectangle_up3():
    
    global b2, a2
    global rectangle_y3
    if rectangle_y3 > -141:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞
        canvas.move(rectangle3, 0, -5)  # –î–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–≤–µ—Ä—Ö
        rectangle_y3 -= 5
        b2 -= 5
        
        
        button3.place(x=a2, y=b2)
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏
        root.after(20, move_rectangle_up3)  # –ö–∞–∂–¥—ã–π 20 –º—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
    else:
        moving_down = True 
def move_rectangle_downs():
    global b 
    global a
    global b1
    global a1
    global b2
    global a2
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é b
    
      # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∏–∂–Ω–∏–π –ø—Ä–µ–¥–µ–ª –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
    if b < 110:
        b += 5
        b1 += 5
        
        slider.place(x=a, y=b)  # –î–≤–∏–≥–∞–µ–º —Å–ª–∞–π–¥–µ—Ä –≤–Ω–∏–∑
        button2.place(x=a1, y=b1)
        root.after(20, move_rectangle_downs)  # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    else:
        moving_down = False
        
    
def move_rectangle_ups():
    global b
    global b1
    global a1
    global a
    global a2
    global b2
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é b
    
      # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–∏–∂–Ω–∏–π –ø—Ä–µ–¥–µ–ª –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
    if b > -49:
        b1 -= 5
        b -= 5
        
        slider.place(x=a, y=b)  # –î–≤–∏–≥–∞–µ–º —Å–ª–∞–π–¥–µ—Ä –≤–Ω–∏–∑
        button2.place(x=a1, y=b1)
        root.after(20, move_rectangle_ups)  # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
    else:
        moving_down = True

def documentation():
    # URL –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è
    url = "https://docs.google.com/presentation/d/17UeY4yW-GUTbcuSApVlCDRqIaByRzo4j/edit?usp=sharing&ouid=109776666387041742162&rtpof=true&sd=true"

# –û—Ç–∫—Ä—ã—Ç—å URL –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
    webbrowser.open_new_tab(url)
    
# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –¥–ª—è Windows
asyncio.set_event_loop_policy(WindowsSelectorEventLoopPolicy())

canvas1 = None

class Text2ImageAPI:
    def __init__(self, url, api_key, secret_key):
        self.URL = url
        self.AUTH_HEADERS = {
            'X-Key': f'Key {api_key}',
            'X-Secret': f'Secret {secret_key}',
        }
        
    def get_model(self):
        response = requests.get(self.URL + 'key/api/v1/models', headers=self.AUTH_HEADERS)
        data = response.json()
        return data[0]['id']
    
    def generate(self, prompt, model, images=1, width=1024, height=1024):
        params = {
            "type": "GENERATE",
            "numImages": images,
            "width": width,
            "height": height,
            "generateParams": {
                "query": f"{prompt}"
            }
        }
        data = {
            'model_id': (None, model),
            'params': (None, json.dumps(params), 'application/json')
        }
        response = requests.post(self.URL + 'key/api/v1/text2image/run', headers=self.AUTH_HEADERS, files=data)
        data = response.json()
        return data['uuid']
    
    def check_generation(self, request_id, attempts=10, delay=10):
        while attempts > 0:
            response = requests.get(self.URL + 'key/api/v1/text2image/status/' + request_id, headers=self.AUTH_HEADERS)
            data = response.json()
            if data['status'] == 'DONE':
                return data['images']
            attempts -= 1
            time.sleep(delay)



def gbt(text1):#–°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ g4f.client 
    global jk
    
    jk = True
    label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 O \n",text_color="black")
    label2.place(x=605, y=200)
    client = Client()# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π g4f
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": text1 + "?"}],# –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ–±–∞–≤–ª—è—è '?' –≤ –∫–æ–Ω–µ—Ü —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è
    )
    label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n",text_color="black")
    label2.place(x=605, y=200)
    
    
    text2 = response.choices[0].message.content # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ—Ç –º–æ–¥–µ–ª–∏
      # –ü–æ–ª—É—á–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    text_widget.delete("1.0", tk.END)
    text_widget.insert(tk.END, text2)  # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
    text3 = text_widget.get("1.0", tk.END)  # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∏–∑ –≤–∏–¥–∂–µ—Ç–∞
    jk = False
    if len(text3) > 3:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞
                # –ó–∞–ø—É—Å–∫–∞–µ–º say –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            root.after(100, lambda: threading.Thread(target=say, args=(True,text2, value2), daemon=True).start())
        
synonyms = [
    "—Å–æ–∑–¥–∞—Ç—å",
    "–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å",
    "–≤—ã—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å",
    "–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å",
    "—Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å",
    "–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞—Ç—å",
    "—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å",
    "–∏–∑–≥–æ—Ç–∞–≤–ª—è—Ç—å",
    "–≤—ã–≤–æ–¥–∏—Ç—å",
    "–≤—ã—á–∏—Å–ª—è—Ç—å"
    "—Å–æ–∑–¥–∞–π",
    "—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π",
    "—Ä–∞–∑—Ä–∞–±–æ—Ç–∞–π",
    "—Å–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–π",
    "—Å—Ñ–æ—Ä–º–∏—Ä—É–π",
    "–∏–∑–≥–æ—Ç–æ–≤—å",
    "–Ω–∞—Ä–∏—Å—É–π",
    "–Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å"
    "–Ω–∞–ø–∏—à–∏",
    "–∫–∞—Ä—Ç–∏–Ω–∫—É",
    "–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
    "–∫–∞—Ä—Ç–∏–Ω—É",
    "–º–∏–Ω–∏–º–∞–ª–∏–∑–º",
    "–°–æ–∑–¥–∞—Ç—å",
    "–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å",
    "–í—ã—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å",
    "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å",
    "–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å",
    "–ö–æ–Ω—Å—Ç—Ä—É–∏—Ä–æ–≤–∞—Ç—å",
    "–§–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å",
    "–ò–∑–≥–æ—Ç–∞–≤–ª—è—Ç—å",
    "–í—ã–≤–æ–¥–∏—Ç—å",
    "–í—ã—á–∏—Å–ª—è—Ç—å"
    "–°–æ–∑–¥–∞–π",
    "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π",
    "–†–∞–∑—Ä–∞–±–æ—Ç–∞–π",
    "–°–∫–æ–Ω—Å—Ç—Ä—É–∏—Ä—É–π",
    "–°—Ñ–æ—Ä–º–∏—Ä—É–π",
    "–ò–∑–≥–æ—Ç–æ–≤—å",
    "–ù–∞—Ä–∏—Å—É–π",
    "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å"
    "–ù–∞–ø–∏—à–∏",
    "–ö–∞—Ä—Ç–∏–Ω–∫—É",
    "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
    "–ö–∞—Ä—Ç–∏–Ω—É",
    "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º"
    ]    




def micro():# 
    global synonyms
    # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–æ–º–æ—â–Ω–∏–∫–∞
    label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 O \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n",text_color="black")
    label2.place(x=605, y=200)
    
    text4 = ""# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    recognizer = sr.Recognizer()# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—è —Ä–µ—á–∏
    try:
        with sr.Microphone() as source:# –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∑–≤—É–∫–∞
            print("–°–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å:")
            audio_data = recognizer.listen(source)# –°–ª—É—à–∞–µ–º –∑–≤—É–∫ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
            text4 = recognizer.recognize_google(audio_data, language="ru-RU")# –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å —Å –ø–æ–º–æ—â—å—é Google Speech Recognition
            print("–í—ã —Å–∫–∞–∑–∞–ª–∏: " + text4)
    except sr.UnknownValueError:# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å
        label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n",text_color="black")
        label2.place(x=605, y=200)
        print("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å")
    except sr.RequestError as e:# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ —Å–≤—è–∑—å—é —Å —Å–µ—Ä–≤–∏—Å–æ–º
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É Google Speech Recognition: {0}".format(e))
    except Exception as e: # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {0}".format(e))
    text_list = text4.split()
    
    a = False
    for i in range(len(synonyms)):
        if synonyms[i] in text_list:
            label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 O \n",text_color="black")
            label2.place(x=605, y=200)
            a = True
            gbt_thread = threading.Thread(target=picture, args=(text4,), daemon=True).start()
            
            return ""
            break
    if a == False:
        gbt2(text4)
        
        
       

def micro2():
    recognizer = sr.Recognizer()# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—è —Ä–µ—á–∏
    try:
        with sr.Microphone() as source:# –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∑–≤—É–∫–∞
            print("–°–∫–∞–∂–∏—Ç–µ –î–∂–∞—Ä–≤–∏—Å:")
            audio_data = recognizer.listen(source)# –°–ª—É—à–∞–µ–º –∑–≤—É–∫ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
            text5 = recognizer.recognize_google(audio_data, language="ru-RU")# –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å —Å –ø–æ–º–æ—â—å—é Google Speech Recognition
    except sr.UnknownValueError:# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å
        text5 = " "
        print("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å")
    except sr.RequestError as e:# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ —Å–≤—è–∑—å—é —Å —Å–µ—Ä–≤–∏—Å–æ–º
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É Google Speech Recognition: {0}".format(e))
    except Exception as e:# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {0}".format(e))
    return text5#–í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç

def jarvis():
    text9 = " "#–°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    while "–î–∂–∞—Ä–≤–∏—Å" not in text9 and "–¥–∂–∞—Ä" not in text9:# –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–Ω–µ—Å–µ–Ω–æ —Å–ª–æ–≤–æ "–î–∂–∞—Ä–≤–∏—Å"
        text9 = micro2() # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é micro2(), –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ä–µ—á—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç
        print(text9)
    if "–î–∂–∞—Ä–≤–∏—Å" in text9 or "–¥–∂–∞—Ä" in text9:
        text8 = micro()# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é micro(), —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        return text8# –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ micro()

def gbt2(text6):
    gbt_thread = threading.Thread(target=gbt, args=(text6,), daemon=True).start()

def get_input_text():
    global synonyms
    
     #–û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é user_input –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã
    text7 = entry.get()# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π entry_var
    print(text7)
    text_widget.delete("1.0", tk.END)# –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∏–¥–∂–µ—Ç–∞ Text
    text_list = text7.split()
    
    a = False
    for i in range(len(synonyms)):
        if synonyms[i] in text_list:
            a = True
            label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 O \n",text_color="black")
            label2.place(x=605, y=200)
            gbt_thread = threading.Thread(target=picture, args=(text7,), daemon=True).start()
            break

    if a == False:  # –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω
    # –ó–∞–ø—É—Å–∫ gbt() –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        
          # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫
        gbt2(text7)
        

        
    
def picture(text8):
    number = random.randint(1000, 99999)
    if __name__ == '__main__':
        api = Text2ImageAPI('', '', '')
        model_id = api.get_model()
        uuid = api.generate(text8, model_id)
        images = api.check_generation(uuid)
    
        # –ó–¥–µ—Å—å image_base64 - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
        image_base64 = images[0]  # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É base64 –≤ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        image_data = base64.b64decode(image_base64)
        string2 = ".jpg"
        number = str(number)
        combined_string = f"{number}{string2}"  # –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n",text_color="black")
        label2.place(x=605, y=200)
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –±–∏–Ω–∞—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        with open(combined_string, "wb") as file:
            file.write(image_data)
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        img = Image.open(combined_string)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º PIL –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        img.show()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    
    
    
def run_jarvis():
    while True:# –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å
        global text8# –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é text1 –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã
        text8 = jarvis()# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é jarvis() –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ text1
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω–µ—Ü –≤–∏–¥–∂–µ—Ç–∞ Text –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        
        

        
def say(flag, user_input, value3 ):
    
    if flag == True:
        
        number1 = random.randint(1000, 99999)
        mp = ".mp3"
        sav = f"{number1}{mp}"
# –¢–µ–∫—Å—Ç –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞
        

# –°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏
        tts = gTTS(text=user_input, lang='ru')
        tts.save(sav)
        button34.configure(state='normal')
        pygame.mixer.music.load(sav)
        pygame.mixer.music.play()
        while True:
            if pygame.mixer.music.get_busy():  # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–≥—Ä–∞–µ—Ç –ª–∏ –º—É–∑—ã–∫–∞
                print("–ú—É–∑—ã–∫–∞ –∏–≥—Ä–∞–µ—Ç...")
            else:
                print("–ú—É–∑—ã–∫–∞ –Ω–µ –∏–≥—Ä–∞–µ—Ç.")
                button34.configure(state='disabled') 
                break  # –í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ –º—É–∑—ã–∫–∞ –Ω–µ –∏–≥—Ä–∞–µ—Ç
            time.sleep(1)  # –ü–∞—É–∑–∞, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä 
def not_say():
    pygame.mixer.music.stop()
    button34.configure(state='disabled')  
    
                

root = ctk.CTk()
root.title("–î–∂–∞—Ä–≤–∏—Å")  # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
root.geometry("750x600")  # –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞
a = 110
b = -49
# –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥–µ—Ä
a1 = 325
a2 = 714
b1 = -49
b2 = -141
#–∫–Ω–æ–ø–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤–∏–¥–∂–µ—Ç–æ–≤

canvas = tk.Canvas(root,bg="grey92", width=750, height=150, highlightthickness=0)
canvas.pack(anchor="n")

# –°–æ–∑–¥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–∞ –∫–∞–Ω–≤–∞—Å–µ
slider = customtkinter.CTkSlider(master=root, from_=0, to=100, command=w)
slider.place(x=a, y=b)
slider.set(0)
button2 = ctk.CTkButton(root, text="üîà", command=sound, width=26, height=25, fg_color="dark grey", hover_color="grey")
button2.place(x=a1, y=b1)# –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ

# –°–æ–∑–¥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–∞ –∫–∞–Ω–≤–∞—Å–µ
# –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
button3 = ctk.CTkButton(root, text="?", command=documentation, width=25, height=25, fg_color="dark grey", hover_color="grey")
button3.place(x=a2, y=b2)
rectangle_y = -150  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è Y
rectangle = canvas.create_rectangle(750, rectangle_y, 0, rectangle_y + 149, fill="light grey")

rectangle_y2 = -51  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è Y
rectangle2 = canvas.create_rectangle(360, rectangle_y2, 100, rectangle_y2 + 28, fill="grey93")
rectangle_y3 = -141  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è Y
rectangle3 = canvas.create_rectangle(740, rectangle_y3, 710, rectangle_y3 + 30, fill="grey93")
moving_down = True  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –±—É–¥–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–Ω–∏–∑


button54 = ctk.CTkButton(root, text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏", command=toggle_rectangle, width=100, height=30, fg_color="dark grey", hover_color="grey")
button54.place(x=640, y=550)# –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
#—Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ - gbt()
text_widget = ctk.CTkTextbox(root, width=505, height=300)

text_widget.place(x=65, y=250)

#label –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n",text_color="black")
label2.place(x=605, y=200)

#–ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
entry = ctk.CTkEntry(root, placeholder_text="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å", width=450, height=25)
entry.place(x=65, y=184)

#–∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
button = ctk.CTkButton(root, text="üîç", command=get_input_text, width=25, height=25, fg_color="dark grey", hover_color="grey")
button.place(x=517, y=184)
button34 = ctk.CTkButton(root, text="ü§ê", command=not_say, width=25, height=25, fg_color="dark grey", hover_color="grey")
button34.place(x=545, y=184)
# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
button34.configure(state='disabled')

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
threading.Thread(target=run_jarvis, daemon=True).start()

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
root.mainloop()

