import asyncio
from asyncio import WindowsSelectorEventLoopPolicy
import speech_recognition as sr
import os
import torch
import tkinter as tk
from tkinter import *
from tkinter import ttk
import threading
from g4f.client import Client
import json
import base64
import requests
import random
from PIL import Image
import customtkinter  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å CustomTkinter –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
import customtkinter as ctk
import time
import webbrowser
from gtts import gTTS  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏ (TTS)
import random
import tkinter as tk
from tkinter import filedialog  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–æ–≥–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
import pygame  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Pygame –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—É–¥–∏–æ –∏ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞
import wave

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Pygame –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—É–¥–∏–æ
pygame.mixer.init()

def say2():        
    sav1 = "12345.wav"  # –ò–º—è —Ñ–∞–π–ª–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∞—É–¥–∏–æ
    device = torch.device('cpu')  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ (CPU)
    torch.set_num_threads(4)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ç–æ–∫–æ–≤

    # –ó–∞–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏ TTS (Text-to-Speech)
    local_file = 'model.pt'

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
    if not os.path.isfile(local_file):
        torch.hub.download_url_to_file('https://models.silero.ai/models/tts/ru/v4_ru.pt',
                                        local_file)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å TTS –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    model = torch.package.PackageImporter(local_file).load_pickle("tts_models", "model")
    model.to(device)  # –ü–µ—Ä–µ–Ω–æ—Å–∏–º –º–æ–¥–µ–ª—å –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ

    # –¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–∑–≤—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
    example_text = "–î–∞ —Å—ç—Ä?"
    sample_rate = 24000  # –ß–∞—Å—Ç–æ—Ç–∞ –¥–∏—Å–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏–∏ –∞—É–¥–∏–æ
    speaker = 'eugene'  # –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä–∞

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—É–¥–∏–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ WAV —Ñ–∞–π–ª —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
    audio_path1 = model.save_wav(text=example_text,
                                  speaker=speaker,
                                  sample_rate=sample_rate,
                                  audio_path=sav1)

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é say2 –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã 
threading.Thread(target=say2, daemon=True).start()

c = 0  # –°—á–µ—Ç—á–∏–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏

def toggle_rectangle():
    global b, b1, moving_down, c, b2, b4  # –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    
    c += 1  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏
    
    if c % 2 != 0:  # –ï—Å–ª–∏ —Å—á–µ—Ç—á–∏–∫ –Ω–µ—á–µ—Ç–Ω—ã–π, –¥–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑ 
        if c > 1:
            b4 = -5  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑ 
            button54.place(x=a4, y=b4)  
        else:
            b4 = 0  
            button54.place(x=a4, y=b4)
        
        move_rectangle_down()  # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –≤–Ω–∏–∑
        
    else:  # –ï—Å–ª–∏ —Å—á–µ—Ç—á–∏–∫ —á–µ—Ç–Ω—ã–π, –¥–≤–∏–≥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–≤–µ—Ä—Ö 
        b4 = 150  
        button54.place(x=a4, y=b4)  
        move_rectangle_up() 

def move_rectangle_down():
    global button2, slider, button3, rectangle_y2, b2, a2, rectangle_y3  
    global b, a1, b1, a3, b3, a4, b4  
    global button54
    
    button54.configure(state='disabled')  # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è
    
    global rectangle_y
    
    if rectangle_y < 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ 
        b2 += 5  
        b1 += 5  
        b += 5  
        b3 += 5  

        canvas.move(rectangle, 0, 5)   # –î–≤–∏–≥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑ 
        slider.place(x=a, y=b)          # –î–≤–∏–≥–∞–µ–º —Å–ª–∞–π–¥–µ—Ä –≤–Ω–∏–∑ 
        button2.place(x=a1, y=b1)       # –î–≤–∏–≥–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑ 
        button34.place(x=a3, y=b3)      # –î–≤–∏–≥–∞–µ–º –¥—Ä—É–≥—É—é –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑ 
        b4 += 5  
        button54.place(x=a4, y=b4)      # –î–≤–∏–≥–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑ 
        
        canvas.move(rectangle2, 0, 5)   # –î–≤–∏–≥–∞–µ–º –≤—Ç–æ—Ä–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑ 
        canvas.move(rectangle3, 0, 5)   # –î–≤–∏–≥–∞–µ–º —Ç—Ä–µ—Ç–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–Ω–∏–∑ 
        
        rectangle_y += 5                 # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ 
        rectangle_y2 += 5  
        rectangle_y3 += 5  

        button3.place(x=a2, y=b2)       # –î–≤–∏–≥–∞–µ–º —Ç—Ä–µ—Ç—å—é –∫–Ω–æ–ø–∫—É 

        root.after(25, move_rectangle_down)   # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–µ 25 –º—Å 
    else:
        moving_down = False   # –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è 
        b4 = 150  
        button54.place(x=a4, y=b4)  
        button54.configure(state='normal')   # –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ–±—Ä–∞—Ç–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è
def move_rectangle_up():
    # –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏
    global button2
    global slider
    global button3
    global rectangle_y2
    global c5
    global b2
    global a2
    global rectangle_y3
    global b 
    global a
    global b1
    global a1
    global b2
    global a2
    global b3
    global b4
    global a4
    global button54
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –≤–≤–µ—Ä—Ö
    button54.configure(state='disabled')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ—Å—Ç–∏–≥ –ª–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ -151)
    if rectangle_y > -151:
        # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–Ω–æ–ø–æ–∫ –∏ —Å–ª–∞–π–¥–µ—Ä–∞ –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è –≤–≤–µ—Ä—Ö
        b2 -= 5  
        b1 -= 5  
        b -= 5  
        b3 -= 5  

        # –î–≤–∏–≥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –≤–≤–µ—Ä—Ö –Ω–∞ 5 –ø–∏–∫—Å–µ–ª–µ–π 
        canvas.move(rectangle, 0, -5)  
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞ –∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —ç–∫—Ä–∞–Ω–µ 
        slider.place(x=a, y=b)  
        button2.place(x=a1, y=b1)  
        button34.place(x=a3, y=b3)  
        
        # –î–≤–∏–≥–∞–µ–º –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏ –≤–≤–µ—Ä—Ö 
        canvas.move(rectangle2, 0, -5)  
        canvas.move(rectangle3, 0, -5)  
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ç—Ä–µ—Ç—å–µ–π –∫–Ω–æ–ø–∫–∏ 
        button3.place(x=a2, y=b2)  
        
        # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–Ω–æ–ø–∫–∏ –¥–ª—è –µ–µ –¥–≤–∏–∂–µ–Ω–∏—è –≤–≤–µ—Ä—Ö 
        b4 -= 5  
        button54.place(x=a4, y=b4)  

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ 
        rectangle_y -= 5  
        rectangle_y2 -= 5  
        rectangle_y3 -= 5  

        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –∞–Ω–∏–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫–∞–∂–¥—ã–µ 25 –º—Å 
        root.after(25, move_rectangle_up)  
        
    else:
        moving_down = True  # –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–µ—Ä—Ö–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –≤–Ω–∏–∑ 
        b4 = -5  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑ 
        button54.place(x=a4, y=b4)  
        
        # –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ–±—Ä–∞—Ç–Ω–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è 
        button54.configure(state='normal')

def sound():
    # –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    global c2
    global button2
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–π –∫–Ω–æ–ø–∫–∏ (üîä –∏–ª–∏ üîà)
    button_text = button2.cget("text")
    
    if button_text == "üîä":  # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –∫–Ω–æ–ø–∫–∞ "–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"
        button2.destroy()  # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É "–≤—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫" –∏ —Ä–∞–∑–º–µ—â–∞–µ–º –µ–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        button2 = ctk.CTkButton(root, text="üîà", command=sound, width=26, height=25,
                                 fg_color="dark grey", hover_color="grey54")
                                 
        button2.place(x=325, y=101)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        
        slider.set(0)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞ –Ω–∞ 0 (–≤—ã–∫–ª—é—á–µ–Ω –∑–≤—É–∫)
        
        value2 = 0   # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤ 0 (–≤—ã–∫–ª—é—á–µ–Ω –∑–≤—É–∫)
        
        w(value2)   # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é w() –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏

    if button_text == "üîà":  # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è –∫–Ω–æ–ø–∫–∞ "–≤—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"
        button2.destroy()  # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É
        
         # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É "–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫" –∏ —Ä–∞–∑–º–µ—â–∞–µ–º –µ–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
         button2 = ctk.CTkButton(root, text="üîä", command=sound, width=20,
                                  height=25, fg_color="dark grey", hover_color="grey54")
                                  
         button2.place(x=325, y=101)   # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        
         slider.set(50)   # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞ –Ω–∞ 50 (–≤–∫–ª—é—á–µ–Ω –∑–≤—É–∫)
         
         value2 = 50   # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤ 50 (—É–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∑–≤—É–∫–∞)
         
         w(value2)   # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é w() –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ Pygame (0 - –≤—ã–∫–ª—é—á–µ–Ω –∑–≤—É–∫)
value2 = 0   
pygame.mixer.music.set_volume(value2)   # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏ –≤ Pygame
def w(value1):
    # –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–æ–π –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç–∏
    global button2
    global value2
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ
    value2 = int(value1)
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç 0 –¥–æ 1 –¥–ª—è Pygame
    value1 = value1 / 100
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –º—É–∑—ã–∫–∏ –≤ Pygame
    pygame.mixer.music.set_volume(value1)
    
    # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –±–æ–ª—å—à–µ 0, —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"
    if value2 > 0:
        button2.destroy()  # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É "–≤–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫" –∏ —Ä–∞–∑–º–µ—â–∞–µ–º –µ–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        button2 = ctk.CTkButton(root, text="üîä", command=sound, width=20, height=25,
                                 fg_color="dark grey", hover_color="grey54")
        button2.place(x=325, y=101)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        
    else:  # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ —Ä–∞–≤–Ω–æ 0, —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–≤—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫"
        button2.destroy()  # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–Ω–æ–ø–∫—É "–≤—ã–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫" –∏ —Ä–∞–∑–º–µ—â–∞–µ–º –µ–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        button2 = ctk.CTkButton(root, text="üîà", command=sound, width=26, height=25,
                                 fg_color="dark grey", hover_color="grey54")
        button2.place(x=325, y=101)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
        
    print(value2)  # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å

def documentation():
    # URL –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
    url = "https://docs.google.com/presentation/d/17UeY4yW-GUTbcuSApVlCDRqIaByRzo4j/edit?usp=sharing&ouid=109776666387041742162&rtpof=true&sd=true"

    # –û—Ç–∫—Ä—ã—Ç—å URL –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –±—Ä–∞—É–∑–µ—Ä–∞
    webbrowser.open_new_tab(url)

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —ç—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≥–¥–µ-—Ç–æ –≤—ã—à–µ –≤ –∫–æ–¥–µ)
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –¥–ª—è Windows –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º —Å–æ–±—ã—Ç–∏–π
asyncio.set_event_loop_policy(WindowsSelectorEventLoopPolicy())

canvas1 = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é canvas1 –∫–∞–∫ None (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø–æ–∑–∂–µ)

class Text2ImageAPI:
    def __init__(self, url, api_key, secret_key):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ API —Å URL –∏ –∫–ª—é—á–∞–º–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        self.URL = url  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑–æ–≤—ã–π URL API
        self.AUTH_HEADERS = {
            'X-Key': f'Key {api_key}',  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å API –∫–ª—é—á–æ–º
            'X-Secret': f'Secret {secret_key}',  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Å–µ–∫—Ä–µ—Ç–Ω—ã–º –∫–ª—é—á–æ–º
        }
        
    def get_model(self):
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –∏–∑ API
        response = requests.get(self.URL + 'key/api/v1/models', headers=self.AUTH_HEADERS)
        data = response.json()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ JSON —Ñ–æ—Ä–º–∞—Ç
        return data[0]['id']  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID –ø–µ—Ä–≤–æ–π –º–æ–¥–µ–ª–∏ –≤ —Å–ø–∏—Å–∫–µ
    
    def generate(self, prompt, model, images=1, width=1024, height=1024):
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ (prompt)
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        params = {
            "type": "GENERATE",  # –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
            "numImages": images,  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            "width": width,  # –®–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            "height": height,  # –í—ã—Å–æ—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            "generateParams": {
                "query": f"{prompt}"  # –¢–µ–∫—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            }
        }
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è POST-–∑–∞–ø—Ä–æ—Å–∞
        data = {
            'model_id': (None, model),  # ID –º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            'params': (None, json.dumps(params), 'application/json')  # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        response = requests.post(self.URL + 'key/api/v1/text2image/run', headers=self.AUTH_HEADERS, files=data)
        
        data = response.json()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ JSON —Ñ–æ—Ä–º–∞—Ç
        return data['uuid']  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
    
    def check_generation(self, request_id, attempts=10, delay=10):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É –∑–∞–ø—Ä–æ—Å–∞
        
        while attempts > 0:  # –ü–æ–∫–∞ –µ—Å—Ç—å –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
            response = requests.get(self.URL + 'key/api/v1/text2image/status/' + request_id, headers=self.AUTH_HEADERS)
            data = response.json()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ JSON —Ñ–æ—Ä–º–∞—Ç
            
            if data['status'] == 'DONE':  # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω
                return data['images']  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            
            attempts -= 1  # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ø—ã—Ç–æ–∫
            time.sleep(delay)  # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–∞—Ç—É—Å–∞



def gbt(text1):
    # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ g4f.client
    global jk  # –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é jk –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é

    jk = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ —Ç–æ, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–µ–Ω
    # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤—ã–∑–æ–≤–∞ –ø–æ–º–æ—â–Ω–∏–∫–∞
    label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 O \n", text_color="black")
    label2.place(x=605, y=200)  # –†–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ

    client = Client()  # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π g4f
    response = client.chat.completions.create(
        model="gpt-4o-mini",  # –£–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞
        messages=[{"role": "user", "content": text1 + ", –æ—Ç–≤–µ—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"}],  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ–±–∞–≤–ª—è—è —É–∫–∞–∑–∞–Ω–∏–µ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    )

    # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–∫—É —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n", text_color="black")
    label2.place(x=605, y=200)

    text2 = response.choices[0].message.content  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏

    # –ü–æ–ª—É—á–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
    text_widget.delete("1.0", tk.END)  # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç
    text_widget.insert(tk.END, text2)  # –í—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç

    text3 = text_widget.get("1.0", tk.END)  # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∏–∑ –≤–∏–¥–∂–µ—Ç–∞
    jk = False  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

    if len(text3) > 3:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤)
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é say –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        root.after(100, lambda: threading.Thread(target=say, args=(True, text2, value2), daemon=True).start())

# –°–ø–∏—Å–æ–∫ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
synonyms = [
    "—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å",
    "–Ω–∞—Ä–∏—Å—É–π",
    "–Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å",
    "–∫–∞—Ä—Ç–∏–Ω–∫—É",
    "–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
    "–∫–∞—Ä—Ç–∏–Ω—É",
    "–ù–∞—Ä–∏—Å—É–π",
    "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å",
    "–ö–∞—Ä—Ç–∏–Ω–∫—É",
    "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
    "–ö–∞—Ä—Ç–∏–Ω—É",
    "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É",
    "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∫–∞—Ä—Ç–∏–Ω–∫—É"
]


def micro():
    # –û–±—ä—è–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏
    global synonyms
    global audio_path1
    global a3
    global button34
    global b3

    try:
        # –ï—Å–ª–∏ –º—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ—ë
        if pygame.mixer.music.get_busy(): 
            pygame.mixer.music.stop()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ—Ñ–∞–π–ª
        pygame.mixer.music.load("12345.wav")
        pygame.mixer.music.play()

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–Ω–æ–ø–∫—É –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ
        button34.destroy()
        button34 = ctk.CTkButton(root, text="‚ñ∂", command=not_say, width=25, height=25, fg_color="dark grey", hover_color="grey54")
        button34.place(x=a3, y=b3)
        button34.configure(state='disabled')  # –î–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π

    except Exception as e:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ª—é–±—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –∞—É–¥–∏–æ

    # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–æ–º–æ—â–Ω–∏–∫–∞
    label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 O \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n", text_color="black")
    label2.place(x=605, y=200)

    text4 = ""  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    recognizer = sr.Recognizer()  # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—è —Ä–µ—á–∏

    try:
        with sr.Microphone() as source:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∑–≤—É–∫–∞
            print("–°–∫–∞–∂–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å:")
            audio_data = recognizer.listen(source)  # –°–ª—É—à–∞–µ–º –∑–≤—É–∫ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
            
            # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å —Å –ø–æ–º–æ—â—å—é Google Speech Recognition
            text4 = recognizer.recognize_google(audio_data, language="ru-RU")  
            print("–í—ã —Å–∫–∞–∑–∞–ª–∏: " + text4)

    except sr.UnknownValueError:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å
        label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n", text_color="black")
        label2.place(x=605, y=200)
        print("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å")

    except sr.RequestError as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É Google Speech Recognition: {0}".format(e))

    except Exception as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {0}".format(e))

    text_list = text4.split()  # –†–∞–∑–±–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞

    a = False  # –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ

    for i in range(len(synonyms)):
        if synonyms[i] in text_list:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –≤ —Å–ø–∏—Å–∫–µ —Å–ª–æ–≤
            label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 O \n", text_color="black")
            label2.place(x=605, y=200)
            a = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≤ True, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Å–∏–Ω–æ–Ω–∏–º
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é picture –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            gbt_thread = threading.Thread(target=picture, args=(text4,), daemon=True).start()
            
            return ""  # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Å–∏–Ω–æ–Ω–∏–º–∞

    if a == False:
        gbt2(text4)  # –ï—Å–ª–∏ —Å–∏–Ω–æ–Ω–∏–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é gbt2 —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        
       

def micro2():
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—è —Ä–µ—á–∏
    recognizer = sr.Recognizer()  
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∑–≤—É–∫–∞
        with sr.Microphone() as source:  
            print("–°–∫–∞–∂–∏—Ç–µ –î–∂–∞—Ä–≤–∏—Å:")  # –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
            # –°–ª—É—à–∞–µ–º –∑–≤—É–∫ —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ audio_data
            audio_data = recognizer.listen(source)  
            
            # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å —Å –ø–æ–º–æ—â—å—é Google Speech Recognition
            text5 = recognizer.recognize_google(audio_data, language="ru-RU")  
            
    except sr.UnknownValueError:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å
        text5 = " "  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
        print("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å")  # –°–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    except sr.RequestError as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–∏—Å—É Google Speech Recognition: {0}".format(e))

    except Exception as e:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫
        print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {0}".format(e))

    return text5  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç (–∏–ª–∏ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏)

def jarvis():
    text9 = " "  # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –ø–æ–∫–∞ –Ω–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–Ω–µ—Å–µ–Ω–æ —Å–ª–æ–≤–æ "–î–∂–∞—Ä–≤–∏—Å"
    while "–î–∂–∞—Ä–≤–∏—Å" not in text9 and "–¥–∂–∞—Ä" not in text9:  
        text9 = micro2()  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é micro2(), –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ä–µ—á—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç
        print(text9)  # –í—ã–≤–æ–¥–∏–º —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å

    # –ï—Å–ª–∏ –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è "–î–∂–∞—Ä–≤–∏—Å" –∏–ª–∏ "–¥–∂–∞—Ä"
    if "–î–∂–∞—Ä–≤–∏—Å" in text9 or "–¥–∂–∞—Ä" in text9:
        text8 = micro()  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é micro(), —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        return text8  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ micro()

def gbt2(text6):
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é gbt –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
    gbt_thread = threading.Thread(target=gbt, args=(text6,), daemon=True).start()
def get_input_text():
    global synonyms  # –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é synonyms –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç, –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∏–∑ –≤–∏–¥–∂–µ—Ç–∞ entry
    text7 = entry.get()  
    print(text7)  # –í—ã–≤–æ–¥–∏–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
    
    text_widget.delete("1.0", tk.END)  # –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤–∏–¥–∂–µ—Ç–∞ Text
    
    # –†–∞–∑–±–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–ª–æ–≤–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
    text_list = text7.split()  
    
    a = False  # –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–ª–∏—á–∏—è —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –≤ —Ç–µ–∫—Å—Ç–µ
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
    for i in range(len(synonyms)):
        if synonyms[i] in text_list:  # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Å–∏–Ω–æ–Ω–∏–º
            a = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –≤ True
            
            # –°–æ–∑–¥–∞–µ–º –∏ —Ä–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–∑–æ–≤–µ –ø–æ–º–æ—â–Ω–∏–∫–∞
            label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—â–Ω–∏–∫–∞ \n \n                 o \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 O \n", text_color="black")
            label2.place(x=605, y=200)  # –†–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é picture –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
            gbt_thread = threading.Thread(target=picture, args=(text7,), daemon=True).start()
            break  # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å–∏–Ω–æ–Ω–∏–º

    if not a:  # –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ —Å–∏–Ω–æ–Ω–∏–º–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω
        # –ó–∞–ø—É—Å–∫–∞–µ–º gbt() –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        gbt2(text7)  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ –±–µ–∑ —Å–∏–Ω–æ–Ω–∏–º–æ–≤
        

        
    
def picture(text8):
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    number = random.randint(1000, 99999)  
    
    if __name__ == '__main__':  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        api = Text2ImageAPI('https://api-key.fusionbrain.ai/', '6E1F29727EE466DDD18BB8122CF04C53', 'E3B2F326F6B9FF7FCDC26B1150277CAF')
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        model_id = api.get_model()  
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
        uuid = api.generate(text8, model_id)  
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        images = api.check_generation(uuid)  
    
        # –ó–¥–µ—Å—å image_base64 - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64
        image_base64 = images[0]  # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞
        
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É base64 –≤ –±–∏–Ω–∞—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        image_data = base64.b64decode(image_base64)  
        
        string2 = ".jpg"  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        number = str(number)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —á–∏—Å–ª–æ –≤ —Å—Ç—Ä–æ–∫—É
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        combined_string = f"{number}{string2}"  
        
        # –°–æ–∑–¥–∞–µ–º –∏ —Ä–∞–∑–º–µ—â–∞–µ–º –º–µ—Ç–∫—É —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤—ã–∑–æ–≤–µ –ø–æ–º–æ—â–Ω–∏–∫–∞
        label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—â–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n", text_color="black")
        label2.place(x=605, y=200)  
    
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –±–∏–Ω–∞—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        with open(combined_string, "wb") as file:
            file.write(image_data)  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
    
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é PIL
        img = Image.open(combined_string)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º PIL –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        img.show()  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    
    
def run_jarvis():
    while True:# –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, —á—Ç–æ–±—ã –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å
        global text8# –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é text1 –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–æ–≥—Ä–∞–º–º—ã
        text8 = jarvis()# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é jarvis() –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ text1
        
        # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –≤ –∫–æ–Ω–µ—Ü –≤–∏–¥–∂–µ—Ç–∞ Text –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        
        

q1 = True       
def say(flag, user_input, value3 ):
    global q1
    if flag == True :
        number1 = random.randint(1000, 99999)
        mp = ".wav"
        sav = f"{number1}{mp}"
        
        
# –°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏
        device = torch.device('cpu')
        torch.set_num_threads(4)

# –ó–∞–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏
        local_file = 'model.pt'

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞
        if not os.path.isfile(local_file):
            torch.hub.download_url_to_file('https://models.silero.ai/models/tts/ru/v4_ru.pt',
                                             local_file)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å TTS
        model = torch.package.PackageImporter(local_file).load_pickle("tts_models", "model")
        model.to(device)

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞

        example_text = user_input
        sample_rate = 24000
        speaker = 'eugene'

# –£–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
         # –ó–¥–µ—Å—å –∑–∞–¥–∞–π—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∏–º—è —Ñ–∞–π–ª–∞

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—É–¥–∏–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ WAV —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º
        audio_path = model.save_wav(text=example_text,
                                     speaker=speaker,
                                     sample_rate=sample_rate,
                                     audio_path=sav
                                     ) 
        print(audio_path)
        
        pygame.mixer.music.load(audio_path)
        pygame.mixer.music.play()
        while True:
            if pygame.mixer.music.get_busy():  # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–≥—Ä–∞–µ—Ç –ª–∏ –º—É–∑—ã–∫–∞
                print("–ú—É–∑—ã–∫–∞ –∏–≥—Ä–∞–µ—Ç...")
                button34.configure(state='normal')
            if q1 != False and not pygame.mixer.music.get_busy():
                print("–ú—É–∑—ã–∫–∞ –Ω–µ –∏–≥—Ä–∞–µ—Ç.")
                button34.configure(state='disabled')
                pygame.mixer.music.stop()
                break
            time.sleep(1)  # –ü–∞—É–∑–∞, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä

def not_say():
    global q1
    global button34
    if q1 == True:
        pygame.mixer.music.pause()
        q1 = False
        button34.destroy()
        button34 = ctk.CTkButton(root, text="‚àé", command=not_say, width=20, height=25, fg_color="dark grey", hover_color="grey54")
        button34.place(x=353, y=101)
    else:
        pygame.mixer.music.unpause()
        q1 = True
        button34.destroy()
        button34 = ctk.CTkButton(root, text="‚ñ∂", command=not_say, width=25, height=25, fg_color="dark grey", hover_color="grey54")
        button34.place(x=353, y=101)

root = ctk.CTk()
root.title("–î–∂–∞—Ä–≤–∏—Å")  # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
root.geometry("750x600")
customtkinter.set_default_color_theme("blue")
customtkinter.set_appearance_mode("light")
a = 110
b = -45
# –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥–µ—Ä
a1 = 325
a2 = 714
b1 = -49
b2 = -137
#–∫–Ω–æ–ø–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤–∏–¥–∂–µ—Ç–æ–≤
a3 = 353
b3 = -49
a4 = 5
b4 = -5
canvas = tk.Canvas(root,bg="grey92", width=750, height=150, highlightthickness=0)
canvas.pack(anchor="n")

# –°–æ–∑–¥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–∞ –∫–∞–Ω–≤–∞—Å–µ
slider = customtkinter.CTkSlider(master=root, from_=0, to=100, command=w)
slider.place(x=a, y=b)
slider.set(0)
button2 = ctk.CTkButton(root, text="üîà", command=sound, width=26, height=25, fg_color="dark grey", hover_color="grey")
button2.place(x=a1, y=b1)# –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
button34 = ctk.CTkButton(root, text="‚ñ∂", command=not_say, width=25, height=25, fg_color="dark grey", hover_color="grey")
button34.place(x=a3, y=b3)
# –°–æ–∑–¥–∞–µ–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –Ω–∞ –∫–∞–Ω–≤–∞—Å–µ
# –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
button3 = ctk.CTkButton(root, text="?", command=documentation, width=25, height=25, fg_color="dark grey", hover_color="grey")
button3.place(x=a2, y=b2)
rectangle_y = -150  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è Y
rectangle = canvas.create_rectangle(750, rectangle_y, 0, rectangle_y + 149, fill="light grey")

rectangle_y2 = -51  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è Y
rectangle2 = canvas.create_rectangle(390, rectangle_y2, 100, rectangle_y2 + 28, fill="grey93")
rectangle_y3 = -141  # –ù–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è Y
rectangle3 = canvas.create_rectangle(740, rectangle_y3, 710, rectangle_y3 + 30, fill="grey93")
moving_down = True  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –±—É–¥–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–Ω–∏–∑

custom_font = ("Helvetica", 16)
button54 = ctk.CTkButton(root, text="‚òÖ", command=toggle_rectangle, width=30, height=30, fg_color="grey96", hover_color="grey100", text_color="red",text_color_disabled="red", font=custom_font)
button54.place(x=a4, y=b4)# –ü–æ—Å–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∏–∂–Ω–µ–≥–æ –ø—Ä–µ–¥–µ–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
#—Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—Ç–≤–µ—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–∏ - gbt()
text_widget = ctk.CTkTextbox(root, width=505, height=300)

text_widget.place(x=65, y=250)

#label –¥–ª—è –ø–æ–º–æ—â–∏ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
label2 = ctk.CTkLabel(root, text="–í—ã–∑–æ–≤ –ø–æ–º–æ—à–Ω–∏–∫–∞ \n \n                 O \n \n –ê–Ω–∞–ª–∏–∑ —Ä–µ—á–∏ \n \n                 o \n \n –ù–µ–π—Ä–æ—Å–µ—Ç—å \n \n                 o \n",text_color="black")
label2.place(x=605, y=200)

#–ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–æ–≤
entry = ctk.CTkEntry(root, placeholder_text="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å", width=479, height=25)
entry.place(x=65, y=184)

#–∫–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
button = ctk.CTkButton(root, text="üîç", command=get_input_text, width=25, height=25, fg_color="dark grey", hover_color="grey")
button.place(x=544, y=184)

# –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
button34.configure(state='disabled')

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
threading.Thread(target=run_jarvis, daemon=True).start()

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
root.mainloop()



